---
import type { Tags } from '../others/tags';
import TagDisplay from './TagDisplay.astro';
import { Image } from "astro:assets";

export interface ZodImageProps {
    height: number;
    src: string;
    width: number;
    format: "png" | "webp" | "jpeg" | "jpg" | "svg" | "tiff" | "gif";
}

export interface Props {
    title: string;
    description: string;
    thumbnailPath: ZodImageProps;
    slug: string;
    tags: Tags[];
};

const {title, description, thumbnailPath, slug, tags} = Astro.props as Props;
---

<div class='card' id={title}>
        <div class="projectCard" data-tags={tags}>
            <a href={`/${slug}`} class="thumbnail">
                <Image src={thumbnailPath} alt={title + " thumbnail"} transition:name=`project-img-${title}`/>
            </a>
        <div class="details">
            <h2>
                <a href={`/${slug}`}>{title}</a>
            </h2>
            <TagDisplay tags={tags} project={title} isSmall={true}/>
            <p>{description}</p>
        </div>
    </div>
</div> 

<style>
    .card {
        max-height: 25rem;
        transition: transform 100ms;
    }

    .projectCard {
        display: flex;
        align-items: center;
    }

    .projectCard .thumbnail {
        display: inline-block;
        height: unset;
        width: 30%;
        min-width: 30%;
    }
    .projectCard .thumbnail img {
        height: unset;
        width: 100%;
        object-fit: contain;
    }

    .projectCard .details {
        display: inline-block;
        margin-left: 10px;
        flex-grow: 1;
    }

    h2 {
        margin-bottom: 0;
    }

    h2 a {
        text-decoration: none;
        color: var(--color-text);
    }

    h2 a:hover {
        text-decoration: underline;
    }

    p {
        margin-top: 0;
        width: 100%;
    }

    .hideCard {
        /* max-height: 0; */
        /* transition: max-height 2000ms; */
        animation: 750ms ease-out  both hideCard;

        /* position: absolute; */
    }

    @keyframes hideCard {
        from {
            transform: translateX(0) scaleY(1);
            max-height: 20rem;
            opacity: 1;
        }
        25% {
            opacity: 0;
            /* transform: translateX(50%) scaleY(0); */
        }
        to {
            padding: 0;
            margin: 0;
            max-height: 0;
            opacity: 0;
        }
    }

    .showCard {
        /* max-height: 0; */
        /* transition: max-height 2000ms; */
        animation: 750ms ease-out  both showCard;

        /* position: absolute; */
    }

    @keyframes showCard {
        from {
            transform: translateX(50) scaleY(0);
            padding: 0;
            margin: 0;
            max-height: 0;
            opacity: 0;
        }
        50% {
            opacity: 0;
        }
        to {
            transform: translateX(0%) scaleY(1);
            max-height: 25rem;
            opacity: 1;
            padding: 25px;
            margin-bottom: 20px;
        }
    }

    @media screen and (max-width: 750px) {
        .projectCard {
          flex-direction: column;
          align-items: flex-start;
        }
        
        .projectCard .thumbnail {
            width: 100%;
            max-width: 500px;
            margin: 0 auto;
        }
    }

</style>