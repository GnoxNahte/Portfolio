---
import Layout from "../layouts/Layout.astro";

import TagDisplay from "../components/TagDisplay.astro";
import { type CollectionEntry, getCollection } from "astro:content";
import { Tags } from "../others/tags";
import TableOfContent from "../components/TableOfContent.astro";
import { Image } from "astro:assets";

export async function getStaticPaths() {
    const projects = await getCollection("projects");
    
    return projects.map(project => ({
        params: {
            slug: project.slug
        },
        props: {
            project
        }
    }));
} 

interface Project {
    project: CollectionEntry<"projects">,
}

const { project } = Astro.props as Project;
const { Content, headings } = await project.render();
const data = project.data;
const dateOptions: Intl.DateTimeFormatOptions = { day: "numeric", month: "long", year: "numeric" };
// TODO (LOW): Detect the user's location using window.navigator.language
// But need to use <script></script>
const userLocale="en-UK";
// TODO (LOW): Table of content with headings? 
// console.log(headings);

let duration = "";
if (data.startDate && data.releaseDate)
{
    duration = dateDiff(data.startDate, data.releaseDate);
}

function dateDiff(startDate: Date, endDate: Date) : string {
    let yearDiff = endDate.getFullYear() - startDate.getFullYear();
    let monthDiff = endDate.getMonth() - startDate.getMonth();
    let dayDiff = endDate.getDate() - startDate.getDate();
    
    // If the day difference is negative, adjust month and day
    if (dayDiff < 0) {
        monthDiff--;
        // Get the number of days in a month for the month and add it to the negative day
        dayDiff += new Date(startDate.getFullYear(), endDate.getMonth() + 1, 0).getDate();
    }

    // If the month difference is negative, adjust the year difference accordingly
    if (monthDiff < 0) {
        yearDiff--;
        monthDiff += 12;
    }

    let duration = "";

    if (yearDiff > 0)
        duration += `${yearDiff} year` + (yearDiff > 1 ? "s" : ""); //  to do : add s if plural
    
    if (monthDiff > 0) {
        duration += (duration ? ", " : "") + `${monthDiff} month` + (monthDiff > 1 ? "s" : "");
    }

    if (dayDiff > 0) {
        duration += (duration ? ", " : "") + `${dayDiff} day` + (dayDiff > 1 ? "s" : "");
    }

    return duration;
}
---

<Layout title={data.title} description={data.shortDescription}>
    <article>
        <div class="container">
            <div class="card">
                <h1>{data.title}</h1>
                <Image src={data.thumbnailPath} alt={data.title + " image"}>
                <div style="height: 25px;"></div> <!-- Small block to separate img and tags -->
                <TagDisplay tags={data.tags} project={data.title}/>
                { data.startDate &&
                    <h4>Start Date: {new Date(data.startDate).toLocaleDateString(userLocale, dateOptions)}</h4>
                }
                { data.releaseDate &&
                    <h4>{data.tags.includes(Tags.Dropped) ? "Dropped" : "Release"} Date: {new Date(data.releaseDate).toLocaleDateString(userLocale, dateOptions)}</h4>
                }
                { duration &&
                    <h4>Duration: {duration}</h4>
                }
                <ul class="list-of-links">
                    <li>{data.projectLink != null && <a href={data.projectLink} class="inlineBtn" target="_blank">Project Link</a>}</li>
                    <li>{data.githubLink != null && <a href={data.githubLink} class="inlineBtn" target="_blank">GitHub Link</a>}</li>
                </ul>
                
                <h2>Description</h2>
                <p>{data.shortDescription}</p>
                <TableOfContent headings={headings}/>
                <hr>
                <div class="markdown">
                    <Content />
                </div>
            </div>
        </div>
    </article>
</Layout>

<style>
    .list-of-links {
        list-style: none;
        padding: 0;
        display: flex;
    }

    .list-of-links li {
        padding-right: 15px;
    }

    img {
        width: 100%;
        max-width: 500px;
        margin: 0 auto;
        object-fit: contain;
        height: unset;
    }
</style>

<!-- Markdown styling needs to be global: https://github.com/withastro/astro/issues/3045 -->
<style is:global>
    
    .markdown img {
        width: 100%;
        max-width: 500px;
        max-height: 100vh;
        margin: 20px auto;
        object-fit: contain;
    }

    .markdown a {
        text-decoration: underline;
    }

    .markdown h2 {
        margin-bottom: 0.5em;
        /* font-size: 1.75em; */
    }

</style>

<script>
    const links = document.getElementsByTagName("a");
    for (let i = 0; i < links.length; i++) {
        const link = links[i];
        const url = new URL(link.href);
        if (url.host !== window.location.host)
            link.target = "_blank";    
    }
</script>